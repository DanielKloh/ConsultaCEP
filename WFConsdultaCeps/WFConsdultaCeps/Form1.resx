<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CCGEENJg/D8NAqKkkk/+YwAAAABJRU5ErkJggg==
</value>
  </data>
</root>